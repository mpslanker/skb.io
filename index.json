[{"content":"What it do?\n","date":"20 January 2024","externalUrl":null,"permalink":"/authors/mslanker/","section":"Authors Taxonomy Listing","summary":"What it do?","title":"Matthew P. Slanker","type":"authors"},{"content":"I have a secret. :)\n","date":"24 December 2023","externalUrl":null,"permalink":"/authors/mcharo/","section":"Authors Taxonomy Listing","summary":"I have a secret. :)","title":"Michael Charo","type":"authors"},{"content":"Suh\n","date":"24 December 2023","externalUrl":null,"permalink":"/authors/masked_farter/","section":"Authors Taxonomy Listing","summary":"Suh","title":"The Masked Farter","type":"authors"},{"content":"A quick example of how to start using author taxonomies in your articles.\n","date":"20 January 2024","externalUrl":null,"permalink":"/authors/","section":"Authors Taxonomy Listing","summary":"A quick example of how to start using author taxonomies in your articles.","title":"Authors Taxonomy Listing","type":"authors"},{"content":"Ok, here we go again. It is 2024 and this time I\u0026rsquo;m going to learn Blender. For real. Seriously! Ok, ok, I know I have said that before. Yes, I know too many times to count. However, I have a plan this time. I am going to lay it out for you right here, right now. And I am even going to show you what I have accomplished thus far.\nThe Plan # As mentioned, Blender has defeated me many times before and in order to not get sent home with my tail between my legs again we are going to break learning down into steps. More importantly we are going to define our goal here as well.\nThe Goal: Become proficient enough in Blender to make basic objects and not be so intimidated by it that you never open it.\nSounds easy enough, right? So what exactly do I mean? Well looking at my current skill set, especially pertaining to programming, I noticed something important. There is the hurdle with a language where if I have to look up every single keyword, I don't want to try and use the language because it is \u0026ldquo;too slow\u0026rdquo;. I need to be able move as fast as I think or at least feel like my tool of choice is not an impediment (This also happened with typing until I sat down and learned to touch type). So for Blender this means because able to manipute the basic shapes. That can be through modifiers, boolean logic, manually editing (scaling, moving, changing) primitives, sculting, or even subdivision. What are all of those? I don\u0026rsquo;t know all of them yet but I havea base understanding of how they differ and I think that is a good enough start. So, now that we know what we want to accomplish let\u0026rsquo;s take a look at our first task.\nGet an Overview of the Tool # Blender has lots of knobs and switches. So many so it overwhelms most. Also until Blender 2.8 the default controls didn\u0026rsquo;t really feel\u0026hellip; sane. That being said we need a nice list of things. Preferably something we can come back to again and again as we need it. Let\u0026rsquo;s just let it all wash over us and hope when the time comes we will think, \u0026ldquo;hey, I know that is possible let me see what that was called again\u0026rdquo; and consult our resource. For me, this is one such resource: Learn Blender 3D in 20 minutes. Blender tutorial for Absolute Beginners (2023) The video has numerous bookmarks, it is clear and concise. I think it will do just nice.\nAgain, let that wash over us and keep coming back to it. Next up we need a project. Ideally something complex enough that we are force to interact with the program beyond rotating the default cube around. Many people swear by this one: Blender 3D - Create and isometric BEDROOM in 15 minutes | Beginner Tutorial. So yeah, don\u0026rsquo;t expect to get that done in 15 minutes. It took me well over a day between the litle free time I have and how many times I had to stop and rewind, while trying to figure out what I did wrong because the buttons I just pushed didn\u0026rsquo;t do what they did for him. (Note: many times he hops in and out of edit mode but doesn\u0026rsquo;t mention this. You eventually get a feel for it. Which is kind of the point of an exercise like this.) Now that we have our +1 learning task how do we use it. No, we don\u0026rsquo;t just watch it and blindly follow along. If we do that we are guaranteed to learn next to nothing. Here is what we want to do.\nGo through the video pausing / rewinding as necessary. Repeat each step as explained in the video. I promise you there will be things that don\u0026rsquo;t make sense. Watch the video very very closely. Look for details like what mode the guy is in or where the origin point is or where the 3D cursor is located. Lots of little things tha make a difference and you will start to get a feel of the different parts. Don\u0026rsquo;t be afraid to nuke part of the scene and start again. I did this a number of times. I got to the point where I could build the entire nightstand from memory. I suggest you do try to do that as well. Tweak each and everything you make. Since it is a video that you can pause and rewind as many times as you\u0026rsquo;d like. Make sure to have fun. Try thngs with each piece that you make. What happens if I add this modifier, what does this keyboard shortcut do, etc. Speaking of keyboard shortcuts. You will want to learn them. Redo some of the things you are shown in the video just to help build the muscle memory for the shortcuts. Don\u0026rsquo;t stray too far. It is ok to add a layer of detail to one of the items in the scene. You can even try creating your own item assuming you aren\u0026rsquo;t going to go off an try to sculpt the Statue of Liberty or something too ambitious. Repeat, repeat, and repeat. Rebuild the components that make up the different items or hell, recreate the scene from memory as best as you can. Do this at least until you feel comfortable with the basic keyboard shortcuts and feel especially comfortable moving objects around in 3D space. Tackle a Newer, Slightly More Difficult Project # Ok, we made a bedroom, rendered it, and maybe added our own personal touch. Let\u0026rsquo;s find a longer, slightly more difficult tutorial. Something that uses shapes not easily made from primitives. Perhaps something a bit more\u0026hellip; organic?\nMy recommendation is this: (Link\u0026rsquo;s Awakening: Link Tutorial)[https://www.youtube.com/playlist?list=PL5F48bE3OZbuaotqwyqWDI1UZvUTEiJSX] This looks sufficiently long, Zeld\u0026hellip; er I mean Link is has a number of round edges and even better when we are done we will have something we can learn to pose. Same rules from before apply here as well. Don\u0026rsquo;t just blindly follow, expirement where possible, be sure to repeat new things that come up, and keep using those keyboard shortcuts.\nAt the time of this writing, I have watch that first video about 4 separate times now. Two times were end to end. The other two I hopped around to find what I needed to know. Really take advantage of those bookmarks.\nI have also worked through building the bedroom diorama. Which I am working on a write up for it as well. Check back for updates. As a teaser, I will at least show the finished product here:\nBonus: I happened upon this video and got inspired: Get that 2D look in 3D!\n","date":"20 January 2024","externalUrl":null,"permalink":"/posts/blender-getting-started/","section":"Posts","summary":"Ok, here we go again. It is 2024 and this time I\u0026rsquo;m going to learn Blender. For real. Seriously! Ok, ok, I know I have said that before. Yes, I know too many times to count.","title":"Learning Blender in 2024","type":"posts"},{"content":"","date":"20 January 2024","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":" ","date":"20 January 2024","externalUrl":null,"permalink":"/","section":"Welcome to skb.io! 🎉","summary":" ","title":"Welcome to skb.io! 🎉","type":"page"},{"content":" This was a port of an old article from my gitbook.com page. The information within may be out of date.\nOverview # Goal: Enable PXE booting on the home network for both BIOS and UEFI machines.\nThe following tools will be used:\nUbiquiti EdgeRouter X w/ dnsmasq for DNS \u0026amp; DHCP Synology will host the TFTP server and images Hyper-V / Parallels will be used for testing For starters we need on bootable image, I have opted to use netboot for image sources. A suitable alternative would be pxelinux.\nSetting Up the TFTP Server # Before we can tell the machines to boot anything we need to configure the TFTP server. As mentioned this will reside on our Synology. -\u0026gt; https://synology.home.local\nEnabling TFTP and Setting Up the Root Folder # Make sure that you have a shared folder that is accessible. For my testing I just created a share called PXE and gave guest read-only access. Login to the web UI Click on Control Panel Click on File Services Select the TFTP tab check the box next to \u0026ldquo;Enable TFTP service\u0026rdquo; Be sure to set the root of your TFTP server below this box (Optional) Under advanced settings you can enable file transfer logs Click Apply Using your system\u0026rsquo;s file browser navigate to the network share (e.g. \\\\synology.home.local\\PXE) This folder should be empty for now Adding an Image or Three # I found it easist to start with using a Gen 1 machien in Hyper-V or even easier to use Parallels and build a legacy (BIOS) machine. And in order to have an image that will boot with BIOS, from the downloads page, you can choose either:\nDHCP DHCP-undionly To keep things organized create a folder named bin in the root of your shared drive and copy one or both of these files to the newly created bin/folder.\nTesting the TFTP Server # The easist way I have found to test is from either WSL or a *nix-based OS, install tftp which is a client. Then you can use the following commands: tftp \u0026amp; get to verify that you can download the images via TFTP. The output should look like so:\nuser@localhost:~$ tftp \u0026lt;Your Synology IP\u0026gt; tftp\u0026gt; get bin/\u0026lt;image-name\u0026gt; Recieved 91646 bytes in 0.1 seconds tftp\u0026gt;quit Congratulations! If you see the #### bytes received, you can successfuly download a bootable image via TFTP.\nConfigured DHCP options for PXE # In my homelab I am running an EdgeRouter X (ER-X) and instead of using the default ISC DHCP daemon, I am using dnsmasq. As such when configuring the dhcp-server options certain values will be ignored (namely global-parameters \u0026amp; subnet-parameters) and instead dnsmasq configurations will have to be made under the dns-forwarding within the \u0026ldquo;options\u0026rdquo; sections. Resources that were helpful in figuring out how to ork with dnsmasq and ER-X.\nEdgeRouter - DHCP Server Using Dnsmasq Eample dnsmasq config ","date":"2 January 2024","externalUrl":null,"permalink":"/posts/booting-with-pxe/","section":"Posts","summary":"This was a port of an old article from my gitbook.com page. The information within may be out of date.\nOverview # Goal: Enable PXE booting on the home network for both BIOS and UEFI machines.","title":"Booting with PXE","type":"posts"},{"content":"I have always been interested in art. When I was younger I took my sketchbook and pencils everywhere I went. So, it is no surprise that I am still fascinated by art, especially computer generated art.\nNow I have been aware of the creatve coding community and generative art for a while now but I never really tried my hand at it. Sure, I dabbled here and there but the math often felt beyond me and often I would sit and stare at a blank text editor at a complete loss.\nRecently that has all changed. I stumbled upon a tool called Ronin. That links to the GitHub page. If you\u0026rsquo;d like to try this tool click here: Ronin demo. While I am not a huge fan of the Lisp programming language, I was able to pick it up enough to play around. (I also got greatly annoyed but the text editor and ended up ripping it out and replacing it the monaco editor but that is a story for another post.) It was a lot of fun just tinkering and trying different values and equations to see what appeared on the screen. The near instant visual feedback was refreshing and it inspired me to dust off my Processing book and download their latest Processing IDE. It just so happens that along the way I ran across something called \u0026ldquo;strange attractors\u0026rdquo;. I hadn\u0026rsquo;t heard of them before but they looked really cool and so I did a little bit of reading and set about trying to create one in Processing. It took me a while to get something working. After all, I had to start out by learning how to get pixels on the screen. Thankfully Processing is designed to make this easy regardless of your experience level with programming.\nAfter a few hours of typeing and swearing I finally managed to get something on the screen that looked like these attractors that I was seeing. I had started with the Lorenz attractor as it was the first one I had come across and seemed simple enough. Afterward I quickly moved on to the Aizawa attractor and eventually got it working as well. Along the way I had to learn more about 3D graphics and rendering. I also had to figure out how to add a camera component to enable moving the object about and even rotating it to see different angles. You can see my results here: Aizawa attractor. Granted mine are nowhere near as pretty and as impressive as jcponce\u0026rsquo;s or Chaotic Atmosphere\u0026rsquo;s but I was happy that I had made significant progress in a single night.\nI fully plan to go on and explore how to integrate particle effects as seen in jcponce\u0026rsquo;s version. However, I took my time to reimplement these in Python and then again in p5.js (the JavaScript variant of Processing) to not only help cement my understand but latter helps make it easier to put them on the web.\nI will hopefully have created a few more before too long and will be sure to update this article with the links.\n","date":"26 December 2023","externalUrl":null,"permalink":"/posts/generative-art/","section":"Posts","summary":"I have always been interested in art. When I was younger I took my sketchbook and pencils everywhere I went. So, it is no surprise that I am still fascinated by art, especially computer generated art.","title":"Creative Coding","type":"posts"},{"content":" Hello, world! Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut hendrerit ex mollis risus finibus dapibus. Maecenas lacinia mollis feugiat. Cras in enim ultricies, consectetur felis sit amet, pretium tellus. Cras ac nulla in elit convallis elementum vel ut justo. Phasellus vitae varius odio. Etiam venenatis tortor non ligula cursus, eu sodales turpis porta. Vivamus porta magna nibh, nec varius nunc tincidunt vitae. Praesent accumsan tortor at vulputate hendrerit. Vivamus tellus odio, vehicula nec elit eu, sollicitudin sagittis ante. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Mauris sodales lorem justo, sed ultricies sapien sollicitudin at.\nAliquam et auctor nulla. Vivamus eleifend, purus non ullamcorper fermentum, nulla diam aliquam leo, a eleifend odio massa et sapien. Nulla efficitur purus condimentum, semper dolor quis, varius nunc. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean justo diam, egestas vitae mollis vitae, pretium ut ligula. Nullam pretium leo eget eros laoreet, ac viverra arcu malesuada. Donec scelerisque placerat magna at eleifend. Praesent ut lorem luctus leo pulvinar facilisis et nec lorem. Proin rhoncus nisi sed purus lacinia, ac ultrices tortor blandit. Praesent vehicula velit in felis pulvinar, et posuere dolor cursus. Fusce ut fermentum lorem, at aliquet risus. Proin id quam nec lacus lobortis volutpat.\nSuspendisse accumsan sem et elit consequat tincidunt. Sed sed felis ut purus semper bibendum ac ut eros. Pellentesque eu eros in sem cursus tempor sed in nisl. Donec tempor mollis finibus. Cras rutrum pulvinar risus sit amet condimentum. Etiam imperdiet sagittis efficitur. Nullam dictum enim arcu, ultricies ullamcorper metus auctor quis. Maecenas vitae quam faucibus, dictum risus eu, vulputate sem. Sed blandit dui ultrices, volutpat lectus sed, euismod est. Vivamus eu sem pellentesque, bibendum sapien vel, suscipit velit. Mauris sollicitudin faucibus arcu id imperdiet.\n","date":"24 December 2023","externalUrl":null,"permalink":"/about/","section":"Welcome to skb.io! 🎉","summary":"Hello, world! Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut hendrerit ex mollis risus finibus dapibus. Maecenas lacinia mollis feugiat. Cras in enim ultricies, consectetur felis sit amet, pretium tellus.","title":"About The Authors","type":"page"},{"content":"","date":"24 December 2023","externalUrl":null,"permalink":"/authors/mslanker.ja/","section":"Authors Taxonomy Listing","summary":"","title":"Mslanker.ja","type":"authors"},{"content":" This is an incomplete article. I will be adding to it as I go. Since this was a fairly arduous learning experience I am documenting this for later reference. I am sure I have done many things wrong during this process and comments regarding better ways to do are always appreciated.\nGetting Started with FastAPI # Since the frontend doesn\u0026rsquo;t do anything without a backend or mocking up data (which I don\u0026rsquo;t know how to do\u0026hellip; yet). I started looking at the backend first.\nTo help avoid breaking anything I am using pipenv to maintain my virtual environment for this part of the project.\n# Starting from the project directory (for me that was ${HOME}/code/my_api) # Install FastAPI with all option to get up and running fast pipenv install \u0026#34;fastapi[all]\u0026#34; # I also installed mangum so this can be later used with AWS API Gateway pipenv install mangum Running the commands above will generate a Pipfile that looks like so:\n# ${HOME}/code/my_api/Pipfile (complete) [[source]] url = \u0026#34;https://pypi.org/simple\u0026#34; verify_ssl = true name = \u0026#34;pypi\u0026#34; [packages] fastapi = {extras = [\u0026#34;all\u0026#34;], version = \u0026#34;*\u0026#34;} mangum = \u0026#34;*\u0026#34; [dev-packages] [requires] python_version = \u0026#34;3.11\u0026#34; Once that is done we can start writing our main.py. The full code can be found here.\nThe first thing we need to do is import FastAPI and Mangum so that we can start working with them.\n# ${HOME}/code/my_api/main.py (fragment) from fastapi import FastAPI from mangum import Mangum Continuing on we create an instance of FastAPI in the variable app\n# ${HOME}/code/my_api/main.py (fragment) ... # Instantiate a FastAPI object app = FastAPI() ... we use this app variable in two ways.\nFirst, we use it to tie a path and function together Second, we pass this app to Mangum so we can create the handler (the handler is not used in this write up) # ${HOME}/code/my_api/main.py (fragment) ... # here the app object is used as a decorator @app.get(\u0026#34;/\u0026#34;) async def root(name: str=\u0026#34;World\u0026#34;): return {\u0026#34;greeting\u0026#34;: f\u0026#34;Hello, {name}!\u0026#34;} # we pass the app to Mangum for use with AWS Gateway handler = Mangum(app) Save the file and run it with pipenv run uvicorn main:app --reload.\nThen open a new terminal window and we can test it with curl (+ jq if you want pretty output).\ncurl -sSfL \u0026#39;http://localhost:8000\u0026#39; # Outputs: {\u0026#34;greeting\u0026#34;, \u0026#34;Hello, World!\u0026#34;} curl -sSfL \u0026#39;http://localhost:8000?name=Matthew\u0026#39; # Outputs: {\u0026#34;greeting\u0026#34;, \u0026#34;Hello, Matthew!\u0026#34;} Will be returning to this code to make updates. So leave this server running as we will be hitting this root (/) endpoing as well as /docs and /openapi.json\nGetting Started with Angular # This was a lot of trial and error. I know practically nothing about Angular so there was a lot to learn. I will do my best to call out where I hit brick walls along the way.\nOpen a 3rd (new) terminal window. This Angular application will reside in a project directory adjacent to the my_app.\n# Starting from the code directory (for me that was ${HOME}/code) # Install the Angular-CLI npm i -g @angular/cli # Install the OpenAPI Generator CLI npm i -g @openapitools/openapi-generator-cli -D # Create your angular app and switch to the newly create my_app dirctory ng new my_app \u0026amp;\u0026amp; cd my_app Alright, now we have a freshly baked Angular app, we should start it and make sure it loads. You can do this with ng serve.\nThis will tie up this terminal so get ready to open yet another one. However, before that we can test this in our browser. By default this page is served at http://localhost:4200 and should look like this:\nEditing the Start Project # We should start by talking about that massive amount stuff that ng new my_app created on your behalf. Here is a directory list\n# Generated from ${HOME}/code/my_app using: # tree -L 3 -I \u0026#39;node_modules\u0026#39; . ├── README.md ├── angular.json # \u0026lt;---------------- Small change made here for CORS ├── node_modules #(not expanded) ├── package-lock.json ├── package.json #\u0026lt;----------------- Add the generator script here ├── src │ ├── app │ │ ├── app.component.css │ │ ├── app.component.html #\u0026lt;--- This is where all the HTML goes │ │ ├── app.component.spec.ts │ │ ├── app.component.ts # \u0026lt;---- This is where you define logic │ │ └── app.module.ts # \u0026lt;------- This is where app settings goes │ ├── assets │ ├── favicon.ico │ ├── index.html │ ├── main.ts │ └── styles.css ├── tsconfig.app.json ├── tsconfig.json └── tsconfig.spec.json Let\u0026rsquo;s wipe out this demo page and make it our own.\nOpen src/app/app.component.html in your favorite editor. Highlight everything. Press the delete key. Now add the following: \u0026lt;h1\u0026gt;{{ title }}\u0026lt;/h1\u0026gt; Hello, Angular! When you save the page should automatically refresh and you will be greeting with our much prettier version: This doesn\u0026rsquo;t belong here yet but I wrote it to make sure I don\u0026rsquo;t forget to call it out. Cross-Origin Resource Sharing (CORS) # Since our API is running on http://localhost:8000 and our WebApp is running http://localhost:4200, we will bump into a confusing CORS error. Both FastAPI and Angular seek to prevent CORS by default and has to be change on both sides. We shall start with Angular since we are already here.\nAngular # FastAPI # ","date":"21 February 2023","externalUrl":null,"permalink":"/posts/ng+fastapi/","section":"Posts","summary":"This is an incomplete article. I will be adding to it as I go. Since this was a fairly arduous learning experience I am documenting this for later reference. I am sure I have done many things wrong during this process and comments regarding better ways to do are always appreciated.","title":"Angular + FastAPI with OpenAPI Generator","type":"posts"},{"content":" Context # I recently switched to a CircuitPython-powered keyboard. The upside is that CircuitPython exposes a virtual removable drive that contains the code (code.py) that will execute on the device. In the case of the keyboard this involves setting up the keymaps, backlight, and some other more experimental features and settings. One downside to this setup is you need another keyboard to get yourself out of crashing changes to code.py. Then there\u0026rsquo;s one other downside that\u0026rsquo;s less critical but at least as equally annoying and the subject of this post. During the first week or two while assembling and configuring the keyboard, you\u0026rsquo;ll likely unplug the keyboard a lot. And unless you\u0026rsquo;re much more diligent than me, you\u0026rsquo;ll end up with a wall of DISK NOT EJECTED PROPERLY notifications.\nGoals # Prevent or cleanup these disk notifications for specific devices. Prefer something event-based rather than timer-based. Solution # Script # Unfortunately, as is increasingly becoming the case, this required resorting to AppleScript and scraping UI elements. This script will look for specific UI elements within the \u0026ldquo;Notification Center\u0026rdquo; app and within those elements again filter for the specific text set at the top of the script. It will then pull the list of available actions on that UI element looking for a Close action and calling it.\nFolder Action Setup # I copied the above script to ~/Library/Scripts/Folder Action Scripts. Then opened Finder and chose Go \u0026gt; Go to Folder... and went to /. You will probably need to tell Finder to show hidden files at this point, which is most easily done by tapping Command + Shift + . (that\u0026rsquo;s a period).\n","date":"1 June 2021","externalUrl":null,"permalink":"/posts/macos-folder-actions/","section":"Posts","summary":"Context # I recently switched to a CircuitPython-powered keyboard. The upside is that CircuitPython exposes a virtual removable drive that contains the code (code.py) that will execute on the device.","title":"macOS Folder Actions - Dismiss Notifications","type":"posts"},{"content":" Goals # To build a virtual DSM machine starting with just the synoboot.img.\nVMware Steps # Steps to create a VM with the hardware necessary to boot Jun\u0026rsquo;s synoboot image\nCreate new VM Configure similar to table below Important settings are the Guest OS name, NIC type, NIC MAC address, Hard disk 1 capacity, Hard disk 1 device node Add any additional hard disks, attached to the second SATA controller starting at position 1:0 In the VM\u0026rsquo;s CD/DVD drive, mount a Linux Live ISO (I used Fedora 33 Workstation). All you really need is something that has dd and a browser. Boot VM, booting into the Linux OS. VM - Linux Steps # Steps to write the synoboot.img to your VM\u0026rsquo;s VMDK\nOnce Linux is booted, use it\u0026rsquo;s browser to download synoboot.img Write synoboot.img to the 50MB disk # use sudo fdisk -l to identify the 50MB disk for the following command sudo dd if=synoboot.img of=/dev/sda Restart the VM Disconnect Linux Live ISO; you want to make sure you\u0026rsquo;re booting from the 50MB disk now. If you\u0026rsquo;re successfully booting from the 50MB disk, then grub should load and present you with 3 boot options: choose the ESXi option (this menu will disappear quickly) Once the VM is on the Happy hacking screen, from your main computer (on the same network as the VM) run Synology Assistant and search for devices (I had better luck running this on Windows vs macOS. If Windows doesn\u0026rsquo;t automatically ask to allow the Synology Assistant through the firewall, then you might need to manually allow it or disable the Windows Firewall) DSM Install # If your vDSM is found, the Synology Assistant should pop up the EULA agreement (if it doesn\u0026rsquo;t pop up you can select the discovered device and click Connect). Once you\u0026rsquo;ve agreed, your browser should open to the Set up screen to install/setup DSM. Click Set up Click Manual Install Click Browse and select the .pat file downloaded from Synology (Download a base release [without a -number at the end]. I used DSM_DS918+_23739.pat but have since upgraded to DSM 6.2.3-25426) Click Install Now Acknowledge that all data will be erased from the existing disks The DSM install will proceed After install completes a reboot counter will show. You can monitor the VM console to see once the VM has rebooted and is back on the Happy hacking screen. Then you should be able to load the DSM web console at https://\u0026lt;IP address\u0026gt;:5000 (IP address is shown in the Synology Assistant) and continue the DSM setup Complete the administrator account setup screen: assigning the hostname, and creating the administrator user Complete the DSM Update and Maintenance setup screen: Choose the option to be notified about updates, avoid automatic updates On the Set up QuickConnect screen, click the link at the bottom of the page to Skip this step On the final setup screen, leave the option to share your location with Synology unchecked DSM should load normally DSM Setup # Open Storage Manager and create a volume, the details of which are up to you. This step is required before you\u0026rsquo;ll be able to install any packages. Download the latest open-vm-tools for your selected model/architecture. For the DS918+ I used the latest apollolake tools. Open Package Center, click Manual Install Click Browse and find the open-vm-tools_*.spk file you downloaded above, and complete the package install. VM Configuration Table # Setting Value Guest OS name Other 3.x Linux (64-bit) Virtualization Based Security Disabled CPUs 2 Memory 8 GB NIC 1 type E1000E NIC 1 MAC address 00:11:32:12:34:56 - This must match the value present inside the synoboot.img\u0026rsquo;s grub.cfg. The value provided here matches the value as of the 1.04b release SATA Controller 0 Hard disk 1 Capacity 50 MB - This is the size of the synoboot.img which we\u0026rsquo;ll be writing to this disk Hard disk 1 Virtual device node SATA(0:0) - This is the boot disk so we want it as the first disk Hard disk 1 Mode Dependent SATA Controller 1 Attach any additional disks here Hard disk 2 Capacity 40 GB Hard disk 2 Virtual device node SATA(1:0) Hard disk 2 Mode Dependent IDE Controller 0 CD/DVD Drive 1 Status [X] Connect At Power On CD/DVD Drive 1 CD/DVD Media ISO file - iso/Fedora-Workstation-Live-x86_64-33-1.2.iso ","date":"7 March 2021","externalUrl":null,"permalink":"/posts/xpenology-dsm104b/","section":"Posts","summary":"Goals # To build a virtual DSM machine starting with just the synoboot.img.\nVMware Steps # Steps to create a VM with the hardware necessary to boot Jun\u0026rsquo;s synoboot image","title":"Xpenology DSM 6.1.x on VMware ESXi 7","type":"posts"},{"content":" Overview # Goal # To be able to use docker context on my local machine to issue commands against the Docker instance on my Synology NAS.\nAssumptions # Unless specifically requested I won\u0026rsquo;t be covering the following here:\nDocker is installed on your Synology You have enabled SSH on your Synology You have docker installed on your client machine You already have an SSH key that you want to use High-level Steps # Here is a quick checklist of things that needs to be done.\nCopy SSH key from client machine to Synology Fix permissions on your user directory Configure Synology\u0026rsquo;s SSH daemon Reload the daemon Verify you can log in with keys instead of password Verify docker version on Synology is 18.09 or later Create docker group Change permissions on docker socket Verify docker commands can be run locally without sudo Create docker context Change context and test Profit! Walkthrough # Enabling SSH access using keys # By default it seems that Synology is not setup to allow authentication using SSH keys. So this is our first order of business.\nCopy SSH key from client machine to Synology # Let\u0026rsquo;s start by getting an suitable SSH key into the .authorized_keys file on the Synology. Make sure that you replace \u0026lt;YOUR-SYNOLOGY-HOSTNAME-HERE\u0026gt; with your Synology\u0026rsquo;s hostname or fqdn.\n1 2 3 4 5 6 7 # Configuring SSH keys for synology login # On client machine # Add ssh-key to synology ssh-copy-id $(id -un)@\u0026lt;YOUR-SYNOLOGY-HOSTNAME-HERE\u0026gt; # You will likely be prompted for a password at this point Create an \u0026rsquo;environment\u0026rsquo; file in the .ssh folder # As we will see in a later step we need to be able to set the users environment in a non-interactive session. Therefore we need to create a file name \u0026ldquo;environment\u0026rdquo;, add a line which configures the path, and mark it executable.\n1 2 3 4 5 # Create the \u0026#39;environment\u0026#39; file in ~/.ssh cd ~/.ssh # Write our current PATH to the environement file echo PATH=$PATH \u0026gt;\u0026gt; ./environment chmod +x ./environment Fix permissions on your user directory # 1 2 3 4 5 # Fix permissions on user directory # On Synology sudo chmod 755 ~ sudo chmod 755 -R ~/.ssh Configure Synology\u0026rsquo;s SSH daemon # You should still be logged into your Synology from performing the previous steps. At this point we need to edit the SSH daemon\u0026rsquo;s config file. (It is assumed you are familiar with editing using vi but feel free to use any editor your are comfortable with.)\nThe file we need to edit is /etc/ssh/sshd_config and you will need sudo or root access to edit this file.\nEdit the file using: sudo vi /etc/ssh/sshd_config\nBelow is a copy of my sshd_config file, however, it is possible yours may be different. Please do not just copy \u0026amp; paste this. Please take care to understand what these options are doing. I have highlighted the values in particular and explain each of them in turn.\nIt is also advised you back up this file before altering it. A simple sudo cp /etc/ssh/sshd_config ~/sshd_config.bak should suffice.\nLines 14 \u0026amp; 17: Hostkey values for RSA and ED25519 algorithms Lines 39 \u0026amp; 40: Enable RSA \u0026amp; public key authentication modes Line 101: Permits our users to override their environments. (This is necessary for some Docker functionality and is covered later in this post) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 Ciphers aes128-ctr,aes128-gcm@openssh.com,aes192-ctr,aes256-ctr,aes256-gcm@openssh.com,chacha20-poly1305@openssh.com KexAlgorithms curve25519-sha256,curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256,diffie-hellman-group14-sha1,diffie-hellman-group14-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521 MACs hmac-sha1,hmac-sha1-etm@openssh.com,hmac-sha2-256,hmac-sha2-256-etm@openssh.com,hmac-sha2-512,hmac-sha2-512-etm@openssh.com,umac-128-etm@openssh.com,umac-128@openssh.com,umac-64-etm@openssh.com,umac-64@openssh.com #\t$OpenBSD: sshd_config,v 1.94 2015/02/02 01:57:44 deraadt Exp $ # This is the sshd server system-wide configuration file. See # sshd_config(5) for more information. # This sshd was compiled with PATH=/usr/bin:/bin:/usr/sbin:/sbin # The strategy used for options in the default sshd_config shipped with # OpenSSH is to specify options with their default value where # possible, but leave them commented. Uncommented options override the # default value. #Port 22 #AddressFamily any #ListenAddress 0.0.0.0 #ListenAddress :: # The default requires explicit activation of protocol 1 #Protocol 2 # HostKey for protocol version 1 #HostKey /etc/ssh/ssh_host_key # HostKeys for protocol version 2 HostKey /etc/ssh/ssh_host_rsa_key #HostKey /etc/ssh/ssh_host_dsa_key #HostKey /etc/ssh/ssh_host_ecdsa_key HostKey /etc/ssh/ssh_host_ed25519_key # Lifetime and size of ephemeral version 1 server key #KeyRegenerationInterval 1h #ServerKeyBits 1024 # Ciphers and keying #RekeyLimit default none # Logging # obsoletes QuietMode and FascistLogging #SyslogFacility AUTH #LogLevel INFO # Authentication: #LoginGraceTime 2m #PermitRootLogin yes #StrictModes yes #MaxAuthTries 6 #MaxSessions 10 RSAAuthentication yes PubkeyAuthentication yes # The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2 # but this is overridden so installations will only check .ssh/authorized_keys #AuthorizedKeysFile\t.ssh/authorized_keys #AuthorizedPrincipalsFile none #AuthorizedKeysCommand none #AuthorizedKeysCommandUser nobody # For this to work you will also need host keys in /etc/ssh/ssh_known_hosts #RhostsRSAAuthentication no # similar for protocol version 2 #HostbasedAuthentication no # Change to yes if you don\u0026#39;t trust ~/.ssh/known_hosts for # RhostsRSAAuthentication and HostbasedAuthentication #IgnoreUserKnownHosts no # Don\u0026#39;t read the user\u0026#39;s ~/.rhosts and ~/.shosts files #IgnoreRhosts yes # To disable tunneled clear text passwords, change to no here! PasswordAuthentication yes #PermitEmptyPasswords no # Change to no to disable s/key passwords ChallengeResponseAuthentication no # Kerberos options #KerberosAuthentication no #KerberosOrLocalPasswd yes #KerberosTicketCleanup yes #KerberosGetAFSToken no # GSSAPI options #GSSAPIAuthentication no #GSSAPICleanupCredentials yes # Set this to \u0026#39;yes\u0026#39; to enable PAM authentication, account processing, # and session processing. If this is enabled, PAM authentication will # be allowed through the ChallengeResponseAuthentication and # PasswordAuthentication. Depending on your PAM configuration, # PAM authentication via ChallengeResponseAuthentication may bypass # the setting of \u0026#34;PermitRootLogin without-password\u0026#34;. # If you just want the PAM account and session checks to run without # PAM authentication, then enable this but set PasswordAuthentication # and ChallengeResponseAuthentication to \u0026#39;no\u0026#39;. UsePAM yes #AllowAgentForwarding yes #AllowTcpForwarding no #GatewayPorts no #X11Forwarding no #X11DisplayOffset 10 #X11UseLocalhost yes #PermitTTY yes #PrintMotd yes #PrintLastLog yes #TCPKeepAlive yes #UseLogin no UsePrivilegeSeparation sandbox\t# Default for new installations. PermitUserEnvironment yes #Compression delayed #ClientAliveInterval 0 #ClientAliveCountMax 3 #UseDNS no #PidFile /var/run/sshd.pid #MaxStartups 10:30:100 #PermitTunnel no ChrootDirectory none #VersionAddendum none # no default banner path #Banner none # override default of no subsystems #Subsystem\tsftp\t/usr/libexec/sftp-server Subsystem sftp internal-sftp -f DAEMON -u 000 # the following are HPN related configuration options # tcp receive buffer polling. disable in non autotuning kernels #TcpRcvBufPoll yes # disable hpn performance boosts #HPNDisabled no # buffer size for hpn to non-hpn connections #HPNBufferSize 2048 # allow the use of the none cipher #NoneEnabled no # Example of overriding settings on a per-user basis #Match User anoncvs #\tX11Forwarding no #\tAllowTcpForwarding no #\tPermitTTY no #\tForceCommand cvs server Match User root AllowTcpForwarding yes Match User admin AllowTcpForwarding yes Match User anonymous AllowTcpForwarding no GatewayPorts no Make the changes as necessary, save, exit the file.\nReload the SSH daemon # We need to validate the config before reloading or we might get locked out. If this happens you also have the option to turn on Telnet via the web GUI but let\u0026rsquo;s try to avoid that. Next we can validate the config and resload it.\n1 2 3 4 5 6 # Validate (As long as there are no errors we are good.) # Deprecations can be ignored for now sudo sshd -t # Reload sudo synoservicectl --reload sshd Verify you can log in with keys instead of password # Congratulations! You should now be able to log into your Synology without getting prompted for a password. Next up, configuring Docker.\nConfiguring the Docker daemon # There are a few ways to accomplish setting up the Docker daemon for remote access. However, for our purposes we are going to use SSH to drastically simplify the setup as it doesn\u0026rsquo;t require us to generate certs or change anything about the socket. If you would like to learn more about the different options I highly recommend this Elton\u0026rsquo;s Docker Nuggets video on Remote Control with Docker Context.\nVerify docker version on Synology is 18.09 or later # The only prerequisite for this on the Synology side is to make sure that the installed Docker version is 18.09 or later. You can check this by logging into your Synology via SSH and running the following command: sudo docker version\nYour output should look like something like this (note the highlight line):\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 you@your-synology:~$ sudo docker version Client: Version: 18.09.8 API version: 1.39 Go version: go1.11 Git commit: bfed4f5 Built: Fri Mar 13 06:46:11 2020 OS/Arch: linux/amd64 Experimental: false Server: Engine: Version: 18.09.8 API version: 1.39 (minimum version 1.12) Go version: go1.11 Git commit: 3a371f3 Built: Fri Mar 13 06:44:35 2020 OS/Arch: linux/amd64 Experimental: false Create docker group # Assuming we\u0026rsquo;re good here the next thing we want to do is remove the need to use sudo everytime we want to run a docker command. We start by creating a group which we can grant this access.\n1 2 3 # Create a group named \u0026#39;docker` # and add your logged in user sudo synogroup --add docker $(id -un) Please make sure to protect access to this group. It gives people the ability to run containers and mount local disks, so don\u0026rsquo;t just grant anyone and everyone access. Change permissions on docker socket # And finally we need to change the permissions on the socket. By default Synology sets the permissions to srw-rw\u0026mdash;- 1 root root but we will be changing this to root docker\n1 2 3 4 5 # (Optional) View current permissions ls -al /var/run/docker.sock # Grant the docker group access to the socket sudo chown root:docker /var/run/docker.sock Verify docker commands can be run locally without sudo # If everything has gone as it should you should be able to logout, log back in, and run docker ps sans sudo and get results (instead of an error message). If you have made it this far continue on the last piece of the puzzle.\nExample output:\n1 2 3 you@your-synology:~$ docker version CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES b4edeec64cd2 pihole/pihole:latest \u0026#34;/s6-init\u0026#34; 2 weeks ago Up 2 weeks (healthy) pi-hole Now let\u0026rsquo;s do that remotely!\nCreate the Docker context # In order to make it easier to switch between different Dockerized servers Docker Contexts was introduced. So we will be creating a context on your local machine in order to easily switch to using Synology\u0026rsquo;s Docker instance.\n1 2 3 4 5 6 # Create the new context docker context create syn-ssh --docker \\ \u0026#34;host=ssh://you@your-synology\u0026#34; # Verify the context was created docker context ls You should see two contexts listed. The original default and the newly created \u0026ldquo;syn-ssh\u0026rdquo;.\nChange context and test # And now for the final test\u0026hellip;\n1 2 3 4 5 # Switch context docker context use syn-ssh # Test docker ps against the remote docker docker ps If you are seeing the containers that are running on your Synology then SUCCESS!!! Pat yourself on the back and enjoy.\nHelpful Links # YouTube - Docker-Nuggets S1E1 \u0026amp; Accompanying Docs for Elton\u0026rsquo;s Video Above\nBash - How to set PATH when running a ssh command? - Unix \u0026amp; Linux Stack Exchange\nIt is the little things that help so freaking much. How to check if a shell is login/interactive/batch - Unix \u0026amp; Linux Stack Exchange\nShell - \u0026ldquo;Command not found\u0026rdquo; when using ssh and non absolute commands - Unix \u0026amp; Linux Stack Exchange\nGood ol’ official documentation ftw! Bash Startup Files (Bash Reference Manual)\nConfigure Synology NAS SSH Key-based authentication\nHow to fix the error “host key verification failed” – The Geek Diary\n","date":"7 March 2021","externalUrl":null,"permalink":"/posts/docker+synology/","section":"Posts","summary":"Overview # Goal # To be able to use docker context on my local machine to issue commands against the Docker instance on my Synology NAS.\nAssumptions # Unless specifically requested I won\u0026rsquo;t be covering the following here:","title":"Docker Contexts \u0026 Synology","type":"posts"},{"content":"Started a new site to keep track of things I work on.\nMore coming (hopefully) soon.\n","date":"3 March 2021","externalUrl":null,"permalink":"/posts/first-post/","section":"Posts","summary":"Started a new site to keep track of things I work on.\nMore coming (hopefully) soon.","title":"A place for various projects","type":"posts"},{"content":"This is the advanced tag. Just like other listing pages in Blowfish, you can add custom content to individual taxonomy terms and it will be displayed at the top of the term listing. :rocket:\nYou can also use these content pages to define Hugo metadata like titles and descriptions that will be used for SEO and other purposes.\n","date":"1 January 0001","externalUrl":null,"permalink":"/tags/advanced/","section":"Tags","summary":"This is the advanced tag. Just like other listing pages in Blowfish, you can add custom content to individual taxonomy terms and it will be displayed at the top of the term listing.","title":"Advanced","type":"tags"},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":" Coming soon™️ ","date":"1 January 0001","externalUrl":null,"permalink":"/projects/","section":"Projects","summary":" Coming soon™️ ","title":"Projects","type":"projects"},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"Blowfish has full support for Hugo taxonomies and will adapt to any taxonomy set up. Taxonomy listings like this one also support custom content to be displayed above the list of terms.\nThis area could be used to add some extra decriptive text to each taxonomy. Check out the advanced tag below to see how to take this concept even further.\n","date":"1 January 0001","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"Blowfish has full support for Hugo taxonomies and will adapt to any taxonomy set up. Taxonomy listings like this one also support custom content to be displayed above the list of terms.","title":"Tags","type":"tags"}]